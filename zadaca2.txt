### Baza podataka za poslovanje jedne videoteke.
- Kreirajte ER dijagram za poslovanje jedne videoteke.
- Videoteka članovima izdaje članske iskaznice te se na temelju članskog broja osoba identificira kako bi mogla posuditi filmove.
- Filmovi su složeni po žanrovima.
- Videoteka ima definiran cjenik za izdavanje hit filma, film koji nije hit te starog filma.
- Jedan film može biti na DVD-u, BlueRay-u ili VHS-u.
- Film se posđuje na rok od jednog dana I ako ga član ne vrati u navedeno vrijeme, zaračunava mu se zakasnina.

### Dopuna zadace
- Svaki film ima zalihu dostupnih kopija po mediju za koji je dostupan
- Svaka fizicka kopija filma ima svoj jedinstveni identifikacijski broj (barcode) kako bi se mogla pratiti
- Clan od jednom moze posuditi vise od jednog filma


The library issues membership cards to its members.
Books are categorized by genres.
Each book can have multiple copies.
Members can borrow books for a period, and late returns incur a fine.
Each book has a unique ISBN, but there can be multiple copies of the same book.

ER Diagram

Entities:

Member
Book
Genre
BookCopy
Borrow


Relationships:

Members can borrow multiple books.
Each book belongs to one genre.
Each book can have multiple copies.
Each borrow record is associated with one member and one book copy.

SQL za kreiranje baze knjiznica
kreirajte bazu i popunite sa proizvoljnim podacima

CREATE TABLE member (
    MemberID INT PRIMARY KEY,
    Name VARCHAR(100),
    Address VARCHAR(200),
    Phone VARCHAR(15),
    MembershipCardNumber VARCHAR(20)
);

CREATE TABLE genre (
    GenreID INT PRIMARY KEY,
    GenreName VARCHAR(100)
);

CREATE TABLE book (
    ISBN VARCHAR(13) PRIMARY KEY,
    Title VARCHAR(200),
    Author VARCHAR(100),
    GenreID INT,
    FOREIGN KEY (GenreID) REFERENCES genre(GenreID)
);

CREATE TABLE bookCopy (
    CopyID INT PRIMARY KEY,
    ISBN VARCHAR(13),
    AvailabilityStatus BOOLEAN,
    FOREIGN KEY (ISBN) REFERENCES book(ISBN)
);

CREATE TABLE borrow (
    BorrowID INT PRIMARY KEY,
    MemberID INT,
    CopyID INT,
    BorrowDate DATE,
    ReturnDate DATE,
    DueDate DATE,
    LateFee DECIMAL(5, 2),
    FOREIGN KEY (MemberID) REFERENCES member(MemberID),
    FOREIGN KEY (CopyID) REFERENCES bookCopy(CopyID)
);